#include "Map.h"

Map::Map(){
  unsigned i,y;
  Player player_1("Juanolo",2,12);
  Player player_2("Pepito",13,1);
  char map[MAPSIZE][MAPSIZE] = {
  {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#',' ','o','#','C',' ',' ',' ',' ',' ','#',' ',' ','p','*','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#','M',' ','#',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#',' ',' ','#','o','#','#','#','#',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#',' ','#','#','#',' ',' ',' ','M',' ','#','#',' ',' ',' ','D','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#',' ','M',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','M',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#',' ',' ',' ','#','#',' ','#','#',' ',' ','#',' ',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#',' ','M',' ',' ','#',' ','#',' ',' ',' ','#','M',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#',' ','#',' ',' ','#',' ',' ',' ','M',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#',' ','#',' ',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','o','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#',' ','P','#',' ','M',' ','#','#','#',' ','#',' ',' ',' ','#',' ',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ','d',' ',' ','C','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#',' ',' ','#','o',' ',' ',' ','M',' ',' ','#','O',' ',' ','#',' ',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#','#','#','#','#','D','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'}
  };
  for(i=0;i<MAPSIZE;i++){
    for(y=0;y<MAPSIZE;y++){
      this->terrain[y][i] = map[i][y];
    }
  }
  players.push_back(player_1);
  players.push_back(player_2);
}

void Map::printMap(Player player_1, Player player_2){
  unsigned i;
  unsigned y;
  char letter;

  for(i=0;i<MAPSIZE;i++){
    printf("\t\t\t\t\t\t\t");
		for(y=0;y<MAPSIZE;y++){
      if(terrain[i][y] == 'P')
      {
        letter = player_1.getLetter();
        printf("\x1b[33m%c\x1b[0m", letter);
      }
      else if(terrain[i][y] == 'p')
      {
        letter = player_2.getLetter();
        printf("\x1b[31m%c\x1b[0m", letter);
      }
      else if(terrain[i][y] == '*') printf("\x1b[32m%c\x1b[0m", terrain[i][y]);
      else if(terrain[i][y] == 'B') printf("\x1b[31m%c\x1b[0m", terrain[i][y]);
      else if(terrain[i][y] == 'O' || terrain[i][y] == 'o') printf("\x1b[34m%c\x1b[0m", terrain[i][y]);
      else if(terrain[i][y] == 'C') printf("\x1b[35m%c\x1b[0m", terrain[i][y]);
      else if(terrain[i][y] == 'D' || terrain[i][y] == 'd') printf("\x1b[90m%c\x1b[0m", terrain[i][y]);
  	  else printf("%c", terrain[i][y]);
		}
		printf("\n");
	}
}
bool Map::gameProcess(Player player, bool player_1){
  u32 kDown = Input::getInput();

  if(((kDown & KEY_DUP) && player_1) && ((kDown & KEY_X) && !player_1)){
      if(terrain[player.getY()-1][player.getX()] == ' '){
          terrain[player.getY()][player.getX()] = ' ';
          terrain[player.getY()-1][player.getX()] = 'P';
          return true;
      }
  }
  if(((kDown & KEY_DDOWN) && player_1) && ((kDown & KEY_B) && !player_1)){
    if(terrain[player.getY()+1][player.getX()] == ' '){
      terrain[player.getY()][player.getX()] = ' ';
      terrain[player.getY()+1][player.getX()] = player.getLetter();
      return true;
    }
  }
  if(((kDown & KEY_DLEFT) && player_1) && ((kDown & KEY_Y) && !player_1)){
    if(terrain[player.getY()][player.getX()-1] == ' '){
      terrain[player.getY()][player.getX()] = ' ';
      terrain[player.getY()][player.getX()-1] = player.getLetter();
      return true;
    }
  }
  if(((kDown & KEY_DRIGHT) && player_1) && ((kDown & KEY_A) && !player_1)){
    if(terrain[player.getY()][player.getX()+1] == ' '){
      terrain[player.getY()][player.getX()] = ' ';
      terrain[player.getY()][player.getX()+1] = player.getLetter();
      return true;
    }
  }
  return false;
}
