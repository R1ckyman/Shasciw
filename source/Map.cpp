#include "Map.h"

Map::Map(){
  unsigned i,y;
  char name_1[8] = {'P','l','a','y','e','r','1','\0'};
  char name_2[8] = {'P','l','a','y','e','r','2','\0'};
  Player player_1(name_1,2,12);
  Player player_2(name_2,13,1);
  char map[MAPSIZE][MAPSIZE] = {
  {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
  {'#',' ','o','#','C',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','D',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ','#'},
  {'#',' ',' ','#',' ',' ',' ',' ','#',' ','#',' ',' ','#',' ','#','#',' ',' ',' ',' ',' ',' ','#',' ','#',' ',' ',' ',' ',' ','#'},
  {'#',' ',' ','#','o','#','D','#','#','D','#','#',' ','#','#','#','#','#','#','#','#','#','#','#','D','#','#','#','#','#','D','#'},
  {'#',' ','#','#','#',' ',' ',' ','M',' ',' ','#',' ','#',' ','D',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
  {'#',' ',' ',' ','D',' ',' ',' ','D',' ',' ','D',' ','#',' ','#','#','#','#','#','#','#','#','#','D','#','#','#','#','#',' ','#'},
  {'#',' ',' ',' ','#','#','D','#','#',' ',' ','#',' ',' ',' ','#','#','#','O',' ',' ','#','#','#',' ','#','#','#','#','#',' ','#'},
  {'#',' ',' ',' ',' ','#',' ','#',' ',' ',' ','#','D','#',' ','#','#','#',' ','#',' ','#','#','#',' ','#','#','o','#','#',' ','#'},
  {'#',' ','#',' ',' ','#',' ',' ',' ','M',' ',' ',' ','#',' ','#','#','#',' ','#',' ',' ',' ','#',' ','#','#',' ','#','#',' ','#'},
  {'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#','#','#',' ','#',' ','#',' ',' ',' ','D',' ',' ',' ','D',' ','#'},
  {'#',' ','#','#',' ',' ','#','#','#','#','#','#','#','#','D','#','#','#','o',' ',' ','#','#','#',' ','#','#',' ','#','#',' ','#'},
  {'#',' ',' ','D',' ',' ',' ',' ',' ',' ',' ','D',' ',' ','o','#','#','#','#','#','#','#','#','#',' ','#','#','O','#','#',' ','#'},
  {'#',' ',' ','#','#','#','#','#','#','#','#','#',' ',' ',' ','#',' ',' ',' ','#','#','#','#','#','D','#','#','#','#','#',' ','#'},
  {'#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#',' ',' ',' ','D',' ',' ',' ','D',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
  {'#',' ',' ','#','o',' ','D',' ',' ',' ',' ','D','O',' ',' ','#',' ','C',' ','#','#','#','#','#','D','#','#','#','#','#',' ','#'},
  {'#','#','#','#','#','D','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ','#','#','#','#','#',' ','#'},
  {'#','o','#',' ',' ',' ',' ',' ',' ','#','o',' ','#','#','#','#','#','#','#','#','#','#','#','#',' ','#','#','#','#','o',' ','#'},
  {'#',' ','#','#',' ','#',' ','#','#','#',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#',' ','#','#','#','#','#',' ','#'},
  {'#',' ',' ','#',' ',' ',' ',' ',' ','D',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','D','#','#','#','#','#',' ','#'},
  {'#',' ',' ',' ',' ',' ',' ',' ','#','#','#','D','#','#','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ','#','#','#',' ','#'},
  {'#','D','#',' ','#','#',' ',' ','D',' ',' ',' ','#',' ',' ',' ','o','#','#','#','#','#',' ','#','#','#',' ','#','#','#',' ','#'},
  {'#',' ','#',' ',' ','#',' ',' ','#',' ',' ',' ','#',' ','#','#',' ','#','#','#','#','#',' ','#','#','#',' ','#','#','#',' ','#'},
  {'#',' ','#',' ','C','#',' ',' ','#','o',' ',' ','D',' ','o','#',' ','D',' ',' ',' ',' ',' ','#','#','#',' ','D',' ','D',' ','#'},
  {'#',' ','#','#','#','#','#','#','#','#','#','#','#',' ',' ',' ',' ','#','#','#','#','#',' ','#','#','#',' ','#','#','#',' ','#'},
  {'#',' ',' ',' ','#','#','#','#','#','#','#','#','#',' ',' ',' ',' ','#','#','#','#','#',' ',' ',' ',' ',' ','#','#','#',' ','#'},
  {'#','#','#','D','#','#','#','#',' ','#','#','#','#','#','#','D','#','#','#','#','#','#','#','#','D','#','#','#','#','#',' ','#'},
  {'#','#',' ',' ','#','#','#','o',' ',' ','#','#','#','#','#',' ','#','#','#','#','#','#','#','#',' ','#','#','#','#','#',' ','#'},
  {'#','#',' ',' ','#','#','#','#',' ','#','#','#','#','#','#',' ','#','#','#','#','#','#','#','#',' ','#','#','#','#','#',' ','#'},
  {'#','O',' ',' ','#','#','#','#',' ','#','#','#','#','#','#',' ','#','#','#','#','#','#','#','#',' ','#','#','#','#','#',' ','#'},
  {'#',' ',' ',' ','#','#','#','#','D','#','#','#','#','#','#',' ','#','#','#','#','#','#','#','#','D','#','#','#','#','#',' ','#'},
  {'#','#',' ',' ','D',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
  {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'}
  };
  for(i=0;i<MAPSIZE;i++){
    for(y=0;y<MAPSIZE;y++){
      terrain[i][y] = map[i][y];
    }
  }
  players.push_back(player_1);
  players.push_back(player_2);
}
void Map::modifyPlayer(unsigned position, Player player){
  players[position] = player;
}
void Map::printMap(bool player_1){
  unsigned i;
  unsigned y;

  terrain[players[0].getY()][players[0].getX()] = players[0].getLetter();
  terrain[players[1].getY()][players[1].getX()] = players[1].getLetter();

  if(player_1) players[0].printStats(11);
  else players[1].printStats(11);

  for(i=0;i<MAPSIZE;i++){
    printf("\x1b[%d;26H",i+7);
		for(y=0;y<MAPSIZE;y++){
      if(terrain[i][y] == players[0].getLetter()) printf("\x1b[33m%c\x1b[0m", terrain[i][y]);
      else if(terrain[i][y] == players[1].getLetter()) printf("\x1b[32m%c\x1b[0m", terrain[i][y]);
      else if(terrain[i][y] == '*') printf("\x1b[31m%c\x1b[0m", terrain[i][y]);
      else if(terrain[i][y] == 'O' || terrain[i][y] == 'o') printf("\x1b[35m%c\x1b[0m", terrain[i][y]);
      else if(terrain[i][y] == 'C') printf("\x1b[35m%c\x1b[0m", terrain[i][y]);
  	  else printf("%c", terrain[i][y]);
		}
		printf("\n");
	}
}
bool Map::gameProcess(Player &player, bool player_1, int &special, int &index){
  bool action = false;

  u32 kDown = Input::getInputDown();

  if((!action) && (((kDown & KEY_ZL) && player_1) || ((kDown & KEY_ZR) && !player_1))){
    if(special == 1){
      special = 0;
      player.printStats(11);
    }
    else{
      special = 1;
      index = 0;
    }
  }
  if((!action) && (((kDown & KEY_DUP) && player_1) || ((kDown & KEY_X) && !player_1))){
    if(special == 0){
      if(terrain[player.getY()-1][player.getX()] == ' '){
        terrain[player.getY()][player.getX()] = ' ';
        terrain[player.getY()-1][player.getX()] = player.getLetter();
        player.setY(player.getY()-1);
        action = true;
      }
    }
    else if(special == 1) if(index > 0) index--;
  }
  if((!action) && (((kDown & KEY_DDOWN) && player_1) || ((kDown & KEY_B) && !player_1))){
    if(special == 0){
      if(terrain[player.getY()+1][player.getX()] == ' '){
        terrain[player.getY()][player.getX()] = ' ';
        terrain[player.getY()+1][player.getX()] = player.getLetter();
        player.setY(player.getY()+1);
        action = true;
      }
    }
    else if(special == 1) if(index < 10) index++;
  }
  if((!action) && (((kDown & KEY_DLEFT) && player_1) || ((kDown & KEY_Y) && !player_1))){
    if(special == 0){
      if(terrain[player.getY()][player.getX()-1] == ' '){
        terrain[player.getY()][player.getX()] = ' ';
        terrain[player.getY()][player.getX()-1] = player.getLetter();
        player.setX(player.getX()-1);
        action = true;
      }
    }
  }
  if((!action) && (((kDown & KEY_DRIGHT) && player_1) || ((kDown & KEY_A) && !player_1))){
    if(special == 0){
      if(terrain[player.getY()][player.getX()+1] == ' '){
        terrain[player.getY()][player.getX()] = ' ';
        terrain[player.getY()][player.getX()+1] = player.getLetter();
        player.setX(player.getX()+1);
        action = true;
      }
    }
  }
  if(special == 1) player.printStats(index);
  return action;
}
